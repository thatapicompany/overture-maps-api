name: Deploy Production to Google Cloud Run
on: 
  workflow_dispatch:
    inputs:
      trigger:
        description: 'Production Deploy'     
        required: true
        default: 'build and deploy'

jobs:
  test-build:
    name: Production - ${{ github.event.head_commit.message }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.x]
    
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: npm install
      run: |
        npm install
    - name: npm test
      run: |
        npm test 
    - name: npm test:e2e
      run: |
        npm run test:e2e 
      
    - name: npm build
      run: |
        npm run build --if-present


  setup-build-publish-deploy:
    needs: [test-build]
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCLOUD_SERVICE_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
      
    # Build the Docker image
    - name: Build
      run: |
        docker build . --tag gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/${{ secrets.GCLOUD_APP_NAME }}
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        docker push gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/${{ secrets.GCLOUD_APP_NAME }}
        
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        gcloud components install beta && gcloud beta run deploy ${{ secrets.GCLOUD_APP_NAME }} --image gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/${{ secrets.GCLOUD_APP_NAME }}:latest --project ${{ secrets.GCLOUD_PROJECT_ID }} --region us-central1 --allow-unauthenticated --platform managed
